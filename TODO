Z180 emulation:

	* [PENDING] clean up the mess, use Z80Ex style context not fixed global stuff
	* [PENDING] implement all Z180 extra ops
	* double check non-functional Z80 undocumented ops on Z180

SD card cartridge emulation:

	* SD card id is invalid, though software seems to ignore it
	* read-only access, write is currently not supported

EXDOS/WD:

	* Not implemented at all (though SD card is a better solution for me)
	* if it works ever: add sound as emulated drive noise :)

Dave:

	* missing TG interrupt source
	* no audio at all

APU:

	* port JSep code from JavaScript
	* check correctness
	* maybe rewrite a closer level emulation, bit precesion with the real APU
	* Wild idea: custom API (FPGA EP ...) with more features, and IS-BASIC numeric format support

Printer:

	* true EP80 looking output with all ctrl codes + graphical mode
	* ability to use host OS' printer directly?

Nick:

	* should be re-written
	* support all mode/colour combos, even if it's not "official"
	* more cycle exact emulation
	* way better vsync emulation
	* INTERLACEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE :)
	* Nick2 stuffs, just for fun? For the future FPGA-EP with more features :)

Memory:

	* [DONE via XEP ROM] ability to configure RAM
	* [DONE?] wait states on non-VRAM
	* VRAM "slowness" emulation (Nick/CPU shared access)

Emulator:

	* at least load Ep128emu's snapshot format
	* Command/log window maybe? With another SDL window, thus platform independent
	* ... OR native dialogs on specific host OS, at least file browser when needed (?)
	* network installer for ROM images, maybe SD card image as well?
	* [DONE] system directory on host OS, to read ROMs, config, whatever
	* ability to configure emulator, save/load configuration?
	* ep128emu "fileio" like stuff to load/save single files
	* Xep ROM clean-up, almost useless currently (maybe it should implement the fileio stuff)
	* configurable keyboard? positional/symbolic mapping, switchable?
	* [DONE] maybe: OSD, if something import happens (mouse grab starts, full screen entered, whatever)
	* video and/or audio recording mode maybe?
	* scripting in command window?
	* disassembler etc? (in command window?)

Host OS / target:

	* Android build?
	* debian package building easily?
	* port to Raspberry Pi: ARM/Linux and maybe to bare iron (without OS!) as well (true EP feeling?)
	* I have no idea about MacOSX. And cross compiling ...

Network emulation:

	* [STARTED] Wiznet W5300 emulation, partial stuff with host TCP/IP, not raw level! emulate DHCP etc answer though

ZX Spectrum emulator card:

	* find the bug with attributes?
	* Wild idea: implement EP+ (FPGA EP) feature based emulation without using NMI + slowdown, etc

Other hardware emulation:

	* TAPE: [WONTFIX] I don't want to use tape ever :)
	* External DAC emulation
	* SIO emulation for "Super EP" [?]
	* Joystick emulation
	* Wild idea: network joy/kbd emulation? :)
	* Wild idea: MSX/MSX2 video chip emulation as an add-on
	* ask others? :)

SDL:

	* [DONE] screenshot, into "usable" PNG
	  [DONE] with lodepng [TODO] use libpng in Linux
	* [DONE] fullscreen mode
	* [DONE] window resizing ability for custom "zoom" factor
	* check possible hardware acceleration, better performance, etc (?)
	* [PENDING] like the previous: check if Render/texture is better than surface?
	* joystick input with SDL functions?

